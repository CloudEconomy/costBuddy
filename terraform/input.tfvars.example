# Provide one parent account ID and multiple comma separated child accounts from where user wants to fetch AWS account cost.
account_ids = {
  "parent_account_id" : "2XXXXXXXX7",
  "child_account_ids" : ["8XXXXXXXXX6","5XXXXXXXX3"]
}


# < optional > if empty then costBuddy will pickup pick user’s default id_rsa.pub , otherwise create/provide AWS key_pair file name without .pem extension.
key_pair = ""

# AWS Region to deploy CostBuddy
region = "us-west-2"

# < optional > In case if the access to the instances are restricted through bastion host, provide the security grouop ID to be whitelisted in the EC2 instance.
bastion_security_group_id = []

# Accepts lists of Subnet ranges in order to access Grafana and Prometheus UI. this CIDR range will be added in EC2 SG inbound rule for port 22 (SSH) ,9091 (prometheus gateway ), (9090 (prometheus UI) ,80 (grafana UI) .
cidr_admin_whitelist = [  "x.x.x.x/32", "x.x.x.x/32", "x.x.x.0/19", "x.x.x.x/32", “x.x.x.x/32" ]

# Provide route53 valid existing zone. This zone is required to access grafana/prometheus UI. Incase of new hosted zones, set hosted_zone_name_exists to false
costbuddy_zone_name = "costbuddy.intuit.com"

# (Default is false) Does not creates a new hosted zone when set to true , Incase of new hosted zones, set to false.
hosted_zone_name_exists = false

# Provide appropriate name to create “A” record for grafana/prometheus UI URL. Example :
# www_domain_name=“dashboard” so grafana UI will be accessible via this url http://<www_domain_name>.<costbuddy_zone_name> = http://dashboard.costbuddy.intuit.com
www_domain_name     = "dashboard"

# this param is important to create EC2 instance under public subnet so that it can be access via IGW (Internet Gateway).
public_subnet_id        = "subnet-abc"

# this param is important to create Lambda under private subnet so that lambda can use NAT g/w to access AWS resources like Ec2,Cost Explore API,S3 etc) , please go through below was document for more info.
# https://aws.amazon.com/premiumsupport/knowledge-center/internet-access-lambda-function/ 
private_subnet_id = "subnet-xyz"

#  if user already has prometheus g/w running somewhere then please provide the hostname otherwise keep it empty , costBuddy deployment will created a new prometheus g/w automatically over 9091 port.
prometheus_push_gw_endpoint = ""

# if user already has prometheus g/w running somewhere then please provide the port number otherwise keep it empty. 
prometheus_push_gw_port = ""


# provide any unique S3 bucket name , costBuddy will created S3 bucket with this name with parent account appended at the end. Example :
# costbuddy-output-bucket = “costbuddy-output-bucket” costBuddy will create S3 bucket “costbuddy-output-bucket-<parent_account_name>” . This S3 bucket is used to store few important files of costBuddy as well as it will store output metrics which can be used in WF or quick site to generate a dashboard same as we are generating in grafana.
costbuddy_output_bucket = "costbuddy-output-bucket"

# CostBuddy can run in Cost Exporor Mode(CE) or Cost Utilization report Mode(CUR) (in V1 , we are supporting only CE mode, V2 will have support for CUR mode).
# costBuddy will be making AWS API calls costExplorer to fetch latest cost utilization and send the metrics to prometheus gateway so that grafana can show the view.
costbuddy_mode                   = "CE"

# Tags to uniquely identify CostBuddy resources
tags = {
  "app" : "costBuddy"
  "env" : "prd"
  "team" : "CloudOps"
  "costCenter" : "CloudEngg"
}
